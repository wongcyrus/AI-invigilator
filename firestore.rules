rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // More robust: check for document existence before reading from it.
    function isTeacher() {
      return exists(/databases/$(database)/documents/students/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/students/$(request.auth.uid)).data.role == 'teacher';
    }

    match /students/{studentId} {
      allow get: if request.auth.uid == studentId || isTeacher();
      allow list: if isTeacher();
      allow create, update: if request.auth.uid == studentId;

      match /classes/{classId} {
        allow write: if isTeacher();
        allow read: if request.auth.uid == studentId;
      }
    }

    match /classes/{classId} {
      // Allow get if the user is a teacher and either the document doesn't exist
      // or the user is one of the teachers of the class.
      allow get: if isTeacher() && (resource == null || request.auth.email in resource.data.teachers);
      allow list: if isTeacher();
      allow create: if isTeacher() && request.auth.email in request.resource.data.teachers && classId.size() >= 3;
      allow update: if isTeacher() && request.auth.email in resource.data.teachers;
    }
  }
}
